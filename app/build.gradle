apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

ext.keyPswd = hasProperty("keyPswd")? getProperty("keyPswd"):"Gradledoc"

android {
    compileSdkVersion 27

    defaultConfig {
        applicationId "com.githang.gradledoc"
        minSdkVersion 14
        targetSdkVersion 27
        versionCode 10000
        versionName "1.0-dev"
        buildConfigField "String", "REVISION", '"' +  "git rev-parse --short HEAD".execute().text.trim() + '"'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
    signingConfigs {
        myConfig {
            storeFile file("../gradle.jks")
            storePassword "Gradle"
            keyAlias "Gradle"
            keyPassword keyPswd
        }
    }

    buildTypes {
        debug {
            signingConfig  signingConfigs.myConfig
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig  signingConfigs.myConfig
        }
    }

    flavorDimensions "channel"
    productFlavors {
        Fir {}
        Google {}
    }
    productFlavors.all { flavor ->
        flavor.dimension "channel"
        manifestPlaceholders = [ CHANNEL: flavor.name]
    }

    android.applicationVariants.all { variant ->
        if(variant.buildType.name == 'release') {
            variant.outputs.all { output ->
                outputFileName = "GradleUserGuide-${defaultConfig.versionName}-${variant.name}.apk"
            }
        }
    }

    lintOptions {
        abortOnError false
    }

    dataBinding {
        enabled = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    // room
    def room_version = "1.1.1"
    implementation "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    // Test helpers
    testImplementation "android.arch.persistence.room:testing:$room_version"
    // support
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support:design:27.1.1'
    implementation 'com.android.support:cardview-v7:27.1.1'
    // okhttp log interceptor
    implementation 'com.parkingwang:okhttp3-loginterceptor:0.5'
    // json
    implementation "com.squareup.moshi:moshi-kotlin:1.8.0"
    // http
    implementation 'com.squareup.okhttp3:okhttp:3.12.0'
    // image loader
    implementation 'com.squareup.picasso:picasso:2.71828'
    // html parser
    implementation 'org.jsoup:jsoup:1.11.3'
    // 友盟
    implementation 'com.umeng.analytics:analytics:6.1.4'
    implementation 'com.githang:umeng-update:2.6.0.1'
    // android代码片段库
    implementation 'com.githang:androidsnippet:0.6.7'
    // 状态栏颜色
    implementation 'com.githang:status-bar-compat:0.7'
    // rxjava, rxandroid
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

if (hasProperty("FIR_TOKEN")) {
    def cmd = ['git', 'show', '-s', '--format=[%ai] %s', '--no-merges', '-n', '10']
    apply plugin: 'fir'

    fir {
        apiTokens([Fir: getProperty("FIR_TOKEN")])
        changeLog cmd.execute().text
        upload true
    }
}
